#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Servo.h>
#define DHTPIN 7 // DHT11 sensor data pin
#define DHTTYPE DHT11 // DHT sensor type
#define MOTOR_PIN_ENA 9 // Enable pin for motor driver (PWM pin)
#define MOTOR_PIN_IN1 10 // Input pin 1 for motor driver
#define MOTOR_PIN_IN2 11 // Input pin 2 for motor driver
#define TEMPERATURE_THRESHOLD 27
#define TEMPERATURE_THRESHOLD1 30 // Temperature threshold to adjust motor speed
#define SERVO_PIN 6 // Pin for the servo motor
DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(0x27, 16, 2); // Adjust the I2C address if necessary
Servo servo;
void setup() {
Serial.begin(9600);
dht.begin();
Wire.begin();
lcd.init();
lcd.backlight();
lcd.begin(16, 2);
lcd.setCursor(0, 0);
lcd.print("Temperature:");
servo.attach(SERVO_PIN); // Attach the servo to the specified pin
}
void loop() {
delay(2000); // Delay between readings (adjust as needed)
float temperature = dht.readTemperature(); // Read temperature in Celsius
if (isnan(temperature)) {
Serial.println("Failed to read temperature from DHT sensor!");
return;
}
Serial.print("Temperature: ");
Serial.print(temperature);
Serial.println(" Â°C");
// Clear the previous motor speed message
lcd.setCursor(0, 1);
lcd.print(" ");
// Adjust motor speed based on temperature
if (temperature > TEMPERATURE_THRESHOLD1 ) {
// Increase motor speed
analogWrite(MOTOR_PIN_ENA, 255); // Set the motor speed to maximum (255)
digitalWrite(MOTOR_PIN_IN1, HIGH); // Set motor direction (forward)
digitalWrite(MOTOR_PIN_IN2, LOW);
lcd.setCursor(0, 1);
lcd.print("Motor Speed: Max");
// Sweep servo from 0 to 180 degrees
for (int pos = 0; pos <= 180; pos += 1) {
servo.write(pos);
delay(15); // Adjust the delay for speed control
}
// Sweep servo from 180 to 0 degrees
for (int pos = 180; pos >= 0; pos -= 1) {
servo.write(pos);
delay(15); // Adjust the delay for speed control
}
}
else if (temperature > TEMPERATURE_THRESHOLD && temperature < TEMPERATURE_THRESHOLD1) {
// Increase motor speed
analogWrite(MOTOR_PIN_ENA, 100); // Set the motor speed to a value (100)
digitalWrite(MOTOR_PIN_IN1, HIGH); // Set motor direction (forward)
digitalWrite(MOTOR_PIN_IN2, LOW);
lcd.setCursor(0, 1);
lcd.print("Motor Speed: Med");
servo.write(90); // Center position for servo
}
else {
// Decrease motor speed
analogWrite(MOTOR_PIN_ENA, 45); // Set the motor speed to a lower value (45)
digitalWrite(MOTOR_PIN_IN1, HIGH); // Set motor direction (forward)
digitalWrite(MOTOR_PIN_IN2, LOW);
lcd.setCursor(0, 1);
lcd.print("Motor Speed: Low");
servo.write(90); // Center position for servo
}
// Update temperature reading on the LCD display
lcd.setCursor(12, 0);
lcd.print(temperature);
lcd.print(" C");
}
